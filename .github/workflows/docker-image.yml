name: MindHelp CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # 基本檢查
  basic-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download && go mod tidy

    - name: Run go vet
      run: go vet ./...

    - name: Check go fmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "❌ 以下檔案需要格式化:"
          gofmt -s -l .
          exit 1
        fi

    - name: Build Go binaries
      run: go build -v ./...

  # Docker 建置與推送到 GitHub Container Registry (GHCR)
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: basic-check
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker Image to GHCR
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: ${{ github.event_name == 'push' }}
        tags: |
          ghcr.io/${{ github.repository_owner }}/mindhelp-backend:latest
          ghcr.io/${{ github.repository_owner }}/mindhelp-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # 最終檢查
  final-check:
    runs-on: ubuntu-latest
    needs: [basic-check, docker-build-and-push]
    if: always()
    steps:
    - name: All checks passed
      run: |
        echo "✅ 所有檢查都通過了！"
        echo "- 基本檢查: ${{ needs.basic-check.result }}"
        echo "- Docker 建置: ${{ needs.docker-build-and-push.result }}"
    
  